spring:
  application:
    name: Spring Boot Mutual TLS

server:
  port: 8443
  http2:
    enabled: true
  ssl:
    enabled: true
    protocol: TLSv1.3
    enabled-protocols: TLSv1.2+TLSv1.3
    ciphers:
      # selection pattern: TLS_(ECDHE|DHE)_(ECDSA|RSA)_WITH_(CHACHA20_POLY1305|AES_(128|256)_(GCM|CBC))_SHA(|256|384|512)
      # note: CHACHA20_POLY1305 not yet available in Java 11 (only in Java 12+)
      - TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA
      - TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256
      - TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
      - TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA
      - TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384
      - TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
      - TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA
      - TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256
      - TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
      - TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA
      - TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384
      - TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
      - TLS_DHE_RSA_WITH_AES_128_CBC_SHA
      - TLS_DHE_RSA_WITH_AES_128_CBC_SHA256
      - TLS_DHE_RSA_WITH_AES_128_GCM_SHA256
      - TLS_DHE_RSA_WITH_AES_256_CBC_SHA
      - TLS_DHE_RSA_WITH_AES_256_CBC_SHA256
      - TLS_DHE_RSA_WITH_AES_256_GCM_SHA384
    key-alias: "wap-server"
    key-store: "classpath:wap-server-keystore.p12"
    key-store-password: "server-secret"
    trust-store: "classpath:wap-server-truststore.p12"
    trust-store-password: "server-secret"
    # require mutual TLS authentication
    client-auth: need
http:
  server:
    port: 8080

management:
  endpoints:
    web:
      base-path: /
      exposure.include: health,metrics
  endpoint.health.show-details: always

logging:
  level:
    org.springframework: WARN
    org.apache: WARN